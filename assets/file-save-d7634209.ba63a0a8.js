var l=async(e,t=[{}],a=null,r=!1)=>{Array.isArray(t)||(t=[t]),t[0].fileName=t[0].fileName||"Untitled";const s=[];if(t.forEach((i,n)=>{s[n]={description:i.description||"",accept:{}},i.mimeTypes?(n===0&&(e.type?i.mimeTypes.push(e.type):e.headers&&e.headers.get("content-type")&&i.mimeTypes.push(e.headers.get("content-type"))),i.mimeTypes.map(o=>{s[n].accept[o]=i.extensions||[]})):e.type&&(s[n].accept[e.type]=i.extensions||[])}),a)try{await a.getFile()}catch(i){if(a=null,r)throw i}const p=a||await window.showSaveFilePicker({suggestedName:t[0].fileName,id:t[0].id,startIn:t[0].startIn,types:s,excludeAcceptAllOption:t[0].excludeAcceptAllOption||!1}),c=await p.createWritable();return"stream"in e?(await e.stream().pipeTo(c),p):"body"in e?(await e.body.pipeTo(c),p):(await c.write(blob),await c.close(),p)};export{l as default};
