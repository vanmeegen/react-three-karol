/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { Object3DNode } from "@react-three/fiber";

// N, E, S, W
export const DIRECTION_PARAMS = [
  { rotation: Math.PI, dx: 0.2, dy: 1.5, dz: 0.8 },
  { rotation: Math.PI / 2, dx: 0.1, dy: 1.5, dz: 0.2 },
  { rotation: 0, dx: 0.7, dy: 1.5, dz: 0.2 },
  { rotation: -Math.PI / 2, dx: 0.8, dy: 1.5, dz: 0.8 },
];

export default function Puppet3D(props: Object3DNode<any, any>) {
  const group = useRef();
  const { nodes, materials } = useGLTF("Puppet3D.glb") as any;
  return (
    <group ref={group} {...props} dispose={null} scale={10}>
      <mesh
        geometry={nodes.mesh_id37.geometry}
        material={materials["72"]}
        position={[-0.03, 0.01, 0.03]}
        scale={0.02}
      />
    </group>
  );
}

useGLTF.preload("Puppet3D.glb");
